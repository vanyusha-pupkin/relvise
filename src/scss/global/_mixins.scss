
//Обнуление списков
@mixin list-reset () {
  margin: 0;
  padding: 0;

  list-style: none;
}
//ПРИМЕР
// @include list-reset ();
//ОПИСАНИЕ
//Для элементов ul и ol обнуляет margin и padding и убирает оформление в виде точек и цифр


//Подключение локальных шрифтов
@mixin font-face ($family, $src, $local-name-1, $local-name-2, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    font-style: $style;
    font-weight: $weight;
    font-display: swap;
    src:  local($local-name-1),
          local($local-name-2),
          url('#{$folder-fonts + $src}.woff2') format('woff2'),
          url('#{$folder-fonts + $src}.woff') format('woff');
  }
}
//ПРИМЕР
//@include font-face("Roboto","Roboto-Regular", "Roboto", "Roboto-Regular", 400, normal);
//ОПИСАНИЕ
//@include font-face("название шрифта","имя файла", "локальное имя 1", "локальное имя 2", вес шрифта, стиль);


//Если браузер поддерживает формат webp подставляется изображение в формате webp
@mixin background-image-webp($file, $extension) {
  .no-webp & {
    background-image: url($file +"."+ $extension);
  }
  .webp & {
    background-image: url($file + ".webp");
  }
}
//ПРИМЕР
// @include background-image-webp("../img/bg-back-mobile", "jpg");
//ОПИСАНИЕ
// @include background-image-webp("путь к файлу + имя файла", "расширение файла");


//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;
  @if $type==1 {
    //Только если меньше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$w-max + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-max - $w-min}));
    }
  } @else if $type==2 {
    //Только если больше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$w-max + px}) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-layout - $w-min}));
    }
  } @else {
    //Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-layout - $w-min}));
  }
}

//ПРИМЕР
// @include adaptiv-value("padding-top", 90, 55, 1);
//ОПИСАНИЕ
// @include adaptiv-value("css свойство",
//                         значение свойства при максимальном ширине контейнера/макета,
//                         значение свойства при минимальной ширине макета,
//                         1 - учитывается ширина контейнера / 2 - учитывается ширина макета);


//Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobSize, $maxSize) {
  $addSize: $pcSize - $mobSize;
  @if $maxSize==1 {
    //Только если меньше контейнера
    font-size: $pcSize + px;
    @media (max-width: #{$w-max + px}) {
      font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-max - $w-min}));
    }
  } @else if $maxSize==2 {
    //Только если больше контейнера
    font-size: $pcSize + px;
    @media (min-width: #{$w-max + px}) {
      font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-layout - $w-min}));
    }
  } @else {
    //Всегда
    font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - #{$width-min}) / #{$w-layout - $w-min}));
  }
}
//ПРИМЕР
// @include adaptiv-font(64, 32, 1);
//ОПИСАНИЕ
// @include adaptiv-font(размер шрифта при максимальном ширине контейнера/макета,
//                       размер шрифта при минимальной ширине макета,
//                       1 - учитывается ширина контейнера / 2 - учитывается ширина макета);
